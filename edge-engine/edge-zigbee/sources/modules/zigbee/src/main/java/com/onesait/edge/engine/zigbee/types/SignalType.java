package com.onesait.edge.engine.zigbee.types;

import java.util.HashMap;
import java.util.Map;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;	

public enum SignalType {

    ACTIVEENERGY("ACTIVEENERGY"),
    ACTIVEENERGYSUM("ACTIVEENERGYSUM"),
    ACTIVEEXPORTEDENERGY("ACTIVEEXPORTEDENERGY"),
    ACTIVEIMPORTEDENERGY("ACTIVEIMPORTEDENERGY"),
    ACTIVENET("ACTIVENET"),
    ACTIVEPOWER("ACTIVEPOWER"),
    ACTIVEPOWER_PH1("ACTIVEPOWER_PH1"),
    ACTIVEPOWER_PH2("ACTIVEPOWER_PH2"),
    ACTIVEPOWER_PH3("ACTIVEPOWER_PH3"),
    ACTIVEENERGY_PH1("ACTIVEENERGY_PH1"),
    ACTIVEENERGY_PH2("ACTIVEENERGY_PH2"),
    ACTIVEENERGY_PH3("ACTIVEENERGY_PH3"),
    ACTIVEPOWERSUM("ACTIVEPOWERSUM"),
    AMBIENTTEMP("AMBIENTTEMP"),
    APPARENTENERGY("APPARENTENERGY"),
    APPARENTENERGYSUM("APPARENTENERGYSUM"),
    COMFORTTEMP("COMFORTTEMP"),
    CURRENTLEVEL("CURRENTLEVEL"),
    DCINPUTCURRENT("DCINPUTCURRENT"),
    DCINPUTPOWER("DCINPUTPOWER"),
    DCINPUTVOLTAGE("DCINPUTVOLTAGE"),
    DF("NOT_DEFINED"),
    DIMMER("DIMMER"),
    ECOTEMP("ECOTEMP"),
    EXTERNALTEMP("EXTERNALTEMP"),
    GASFLOW("GASFLOW"),
    GASVOLUME("GASVOLUME"),
    GETMAX("GETMAX"),
    HUE("HUE"),
    HUMIDITY("HUMIDITY"),
    LIGHTING("LIGHTING"),
    MANOMETRICPRESSURE("MANOMETRICPRESSURE"),
    MODE("MODE"),
    NONE("NONE"),
    OCCUPIEDHEATINGSETPOINT("OCCUPIEDHEATINGSETPOINT"),
    OFF("OFF"),
    ON("ON"),
    OTHER("OTHER"),
    OTHERFLOW("OTHERFLOW"),
    OTHERVOLUME("OTHERVOLUME"),
    PHASE1ACTIVEPOWER("PHASE1ACTIVEPOWER"),
    PHASE1APPARENTPOWER("PHASE1APPARENTPOWER"),
    PHASE1CURRENT("PHASE1CURRENT"),
    PHASE1POWERFACTOR("PHASE1POWERFACTOR"),
    PHASE1REACTIVEPOWER("PHASE1REACTIVEPOWER"),
    PHASE1REACTIVEPOWERSUM("PHASE1REACTIVEPOWERSUM"),
    PHASE1THDISTORTIONC("PHASE1THDISTORTIONC"),
    PHASE1THDISTORTIONV("PHASE1THDISTORTIONV"),
    PHASE1VOLTAGE("PHASE1VOLTAGE"),
    PHASE2ACTIVEPOWER("PHASE2ACTIVEPOWER"),
    PHASE2APPARENTPOWER("PHASE2APPARENTPOWER"),
    PHASE2CURRENT("PHASE2CURRENT"),
    PHASE2POWERFACTOR("PHASE2POWERFACTOR"),
    PHASE2REACTIVEPOWER("PHASE2REACTIVEPOWER"),
    PHASE2REACTIVEPOWERSUM("PHASE2REACTIVEPOWERSUM"),
    PHASE2THDISTORTIONC("PHASE2THDISTORTIONC"),
    PHASE2THDISTORTIONV("PHASE2THDISTORTIONV"),
    PHASE2VOLTAGE("PHASE2VOLTAGE"),
    PHASE3ACTIVEPOWER("PHASE3ACTIVEPOWER"),
    PHASE3APPARENTPOWER("PHASE3APPARENTPOWER"),
    PHASE3CURRENT("PHASE3CURRENT"),
    PHASE3POWERFACTOR("PHASE3POWERFACTOR"),
    PHASE3REACTIVEPOWER("PHASE3REACTIVEPOWER"),
    PHASE3REACTIVEPOWERSUM("PHASE3REACTIVEPOWERSUM"),
    PHASE3THDISTORTIONC("PHASE3THDISTORTIONC"),
    PHASE3THDISTORTIONV("PHASE3THDISTORTIONV"),
    PHASE3VOLTAGE("PHASE3VOLTAGE"),
    PHASE12VOLTAGE("PHASE12VOLTAGE"),
    PHASE23VOLTAGE("PHASE23VOLTAGE"),
    PHASE31VOLTAGE("PHASE31VOLTAGE"),
    PHASEACTIVEPOWER("PHASEACTIVEPOWER"),
    PHASEAPPARENTPOWER("PHASEAPPARENTPOWER"),
    PHASECURRENT("PHASECURRENT"),
    PHASEREACTIVEPOWER("PHASEREACTIVEPOWER"),
    PHASEVOLTAGE("PHASEVOLTAGE"),    
    POWERFACTOR("POWERFACTOR"),
    REACTIVEENERGY("REACTIVEENERGY"),
    REACTIVEENERGYQ1("REACTIVEENERGYQ1"),
    REACTIVEENERGYQ2("REACTIVEENERGYQ2"),
    REACTIVEENERGYQ3("REACTIVEENERGYQ3"),
    REACTIVEENERGYQ4("REACTIVEENERGYQ4"),
    REACTIVEENERGYSUM("REACTIVEENERGYSUM"),
    REACTIVEPOWER("REACTIVEPOWER"),
    REMOVE("REMOVE"),
    RESTART("RESTART"),
    SATURATION("SATURATION"),
    SEARCHING("SEARCHING_NODE"),
    SENSOR("SENSOR"),
    SET("SET"),
    SETPOINT("SETPOINT"),
    SETPOINT_COOL("SETPOINT_COOL"),
    STATUS("STATUS"),
    SYSTEM_MODE("SYSTEM_MODE"),
    TANKVOLUME("TANKVOLUME"),
    TEMPERATURE("TEMPERATURE"),
    TOTALACTIVEPOWER("TOTALACTIVEPOWER"),
    TOTALAPPARENTPOWER("TOTALAPPARENTPOWER"),
    TOTALCURRENT("TOTALCURRENT"),
    TOTALFREQUENCY("TOTALFREQUENCY"),
    TOTALREACTIVEPOWER("TOTALREACTIVEPOWER"),
    TOTALVOLTAGE("TOTALVOLTAGE"),
    UPDATE("UPDATE"),
    WATERFLOW("WATERFLOW"),
    WATERVOLUME("WATERVOLUME"),
    PHASE1ACTIVEENERGY("PHASE1ACTIVEENERGY"),
    PHASE2ACTIVEENERGY("PHASE2ACTIVEENERGY"),
    PHASE3ACTIVEENERGY("PHASE3ACTIVEENERGY"),
    WATERVOLUMESUM("WATERVOLUMESUM");

	
    private final String value;
    private static final Map<String, SignalType> CONSTANTS = new HashMap<>();

    static {
        for (SignalType c: values()) {
            CONSTANTS.put(c.value, c);
        }
    }

    private SignalType(String value) {
        this.value = value;
    }

    @Override
    public String toString() {
        return this.value;
    }

    @JsonValue
    public String value() {
        return this.value;
    }

    @JsonCreator
    public static SignalType fromValue(String value) {
        SignalType constant = CONSTANTS.get(value);
        if (constant == null) {
            throw new IllegalArgumentException(value);
        } else {
            return constant;
        }
    }
    
    public static boolean isIntoDB(SignalType cst){
    	return (cst==ACTIVEENERGY || cst == AMBIENTTEMP || cst==MODE);
    }
    
    public static boolean isIntoDB2(SignalType cst){
    	return (cst==ACTIVEENERGY || cst == AMBIENTTEMP || cst==STATUS);
    }

}